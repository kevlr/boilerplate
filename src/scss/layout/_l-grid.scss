/** ======================================
* Molecule : Grid
* ======================================= */

.l-grid {
  display: flex;
  flex-wrap: wrap;
  padding: 0;
	margin: 0;

  @each $name, $gap in $grid-column-gap {
    @include media-query($name) {
      margin-left: -$gap;
    }
  }
}

.l-grid-item {
  width: 100%;
  min-height: 1px;

  @each $name, $gap in $grid-column-gap {
    @include media-query($name) {
      padding-left: $gap;
    }
  }
}

@each $name, $breakpoint in $grid-breakpoints {
  $suffix: if($breakpoint == 0, '', '-#{$name}');

  @include media-query($name) {
    @for $column-number from 1 through $grid-columns {
      .l-grid-item--#{$column-number}#{$suffix} {
        width: 100% / $grid-columns * $column-number;
      }
    }
  }
}

@each $name, $breakpoint in $grid-breakpoints {
  $suffix: if($breakpoint == 0, '', '-#{$name}');

  @include media-query($name) {
    @for $column-number from 0 through $grid-columns - 1 {
      .l-grid-item--push#{$column-number}#{$suffix} {
        margin-left: 100% / $grid-columns * $column-number;
      }
    }
  }
}

.l-grid--rowGap {
  @each $name, $gap in $grid-row-gap {
    @include media-query($name) {
      margin-top: -$gap;
    }
  }

  .l-grid-item {
    @each $name, $gap in $grid-row-gap {
      @include media-query($name) {
        padding-top: $gap;
      }
    }
  }
}

.l-grid--alignCenter {
  align-items: center;
}

.l-grid--equalHeight {
  .l-grid-item {
    > * {
      height: 100%;
    }
  }
}
